plugins {
    id 'com.android.application'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android'
    id 'kotlin-kapt' // TODO Migrate to KSP when stable
}

android {
    compileSdk = 30

    defaultConfig {
        applicationId "dev.sjaramillo.pedometer"
        targetSdk 30 // Check https://github.com/sjaramillo10/Pedometer/pull/14 before increasing version
        minSdk 21
        versionCode 1
        versionName "0.1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release
    }

    lintOptions{
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled = true
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            signingConfig signingConfigs.release
            zipAlignEnabled true
            minifyEnabled false
        }
    }
}
dependencies {
    // Enable Java 8+ API desugaring
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:1.1.5")

    // AndroidX
    implementation libs.appcompat
    implementation libs.activity
    implementation libs.fragment
    implementation libs.preference

    // Hilt
    implementation libs.hilt.core
    kapt libs.hilt.compiler

    // Material Components
    implementation libs.material

    // Navigation
    implementation libs.navigation.fragment
    implementation libs.navigation.ui

    // Room
    implementation libs.room.core
    implementation libs.room.runtime
    kapt libs.room.compiler

    // WorkManager
    implementation libs.work.runtime

    // Other
    implementation libs.logcat
    implementation libs.eaze.graph

    // Unit Tests
    testImplementation libs.junit

    // Instrumentation tests
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.test.rules
    androidTestImplementation libs.androidx.test.runner
    androidTestImplementation libs.hilt.testing
    androidTestImplementation libs.core.testing
    androidTestImplementation libs.work.testing
    kaptAndroidTest libs.hilt.compiler
}

kapt {
    correctErrorTypes true
}

def props = new Properties()

if (project.file("key.properties").exists()) {
    props.load(new FileInputStream(project.file("key.properties")))
} else {
    logger.warn('Using sample keystore!!')
    props.load(new FileInputStream(project.file("key.properties.sample")))
}

android.signingConfigs.release.storeFile rootProject.file(props.keyStore)

android.signingConfigs.release.storePassword props.keyStorePassword

android.signingConfigs.release.keyAlias props.keyAlias

android.signingConfigs.release.keyPassword props.keyAliasPassword
