apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion = 30

    defaultConfig {
        applicationId "dev.sjaramillo.pedometer"
        targetSdkVersion 30
        minSdkVersion 21
        versionCode 1
        versionName "0.1.0"
    }

    signingConfigs {
        release
    }

    lintOptions{
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled = true
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            signingConfig signingConfigs.release
            zipAlignEnabled true
            minifyEnabled false
        }
    }
}

dependencies {
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:1.1.5")

    implementation 'androidx.activity:activity-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.fragment:fragment-ktx:1.3.6'
    implementation 'androidx.preference:preference-ktx:1.1.1'

    implementation 'com.github.j4velin.EazeGraph:EazeGraph:1.0.3'

    testImplementation("junit:junit:4.13.2")
}

def props = new Properties()

if (project.file("key.properties").exists()) {
    props.load(new FileInputStream(project.file("key.properties")))
} else {
    logger.warn('Using sample keystore!!')
    props.load(new FileInputStream(project.file("key.properties.sample")))
}

android.signingConfigs.release.storeFile rootProject.file(props.keyStore)

android.signingConfigs.release.storePassword props.keyStorePassword

android.signingConfigs.release.keyAlias props.keyAlias

android.signingConfigs.release.keyPassword props.keyAliasPassword
